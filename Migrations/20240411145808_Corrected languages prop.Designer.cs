// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aeternaCaptions.src.Database;

#nullable disable

namespace aeternaCaptions.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240411145808_Corrected languages prop")]
    partial class Correctedlanguagesprop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("aeternaCaptions.src.model.SubtitleFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SubtitleContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubtitleLanguage")
                        .HasColumnType("integer");

                    b.Property<int>("TranscriptInternalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TranscriptInternalId");

                    b.ToTable("SubtitleFiles");
                });

            modelBuilder.Entity("aeternaCaptions.src.model.Transcript", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InternalId"));

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("NativeLanguageCode")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "language_code");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InternalId");

                    b.ToTable("Transcripts");
                });

            modelBuilder.Entity("aeternaCaptions.src.model.SubtitleFile", b =>
                {
                    b.HasOne("aeternaCaptions.src.model.Transcript", "Transcript")
                        .WithMany("SubtitleFiles")
                        .HasForeignKey("TranscriptInternalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transcript");
                });

            modelBuilder.Entity("aeternaCaptions.src.model.Transcript", b =>
                {
                    b.Navigation("SubtitleFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
